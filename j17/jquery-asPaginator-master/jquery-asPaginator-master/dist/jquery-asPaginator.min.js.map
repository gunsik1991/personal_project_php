{"version":3,"sources":["jquery-asPaginator.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsPaginatorEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","throttle","func","wait","_this","_now","Date","now","getTime","timeout","context","args","result","previous","later","apply","_len","arguments","length","params","Array","_key","remaining","clearTimeout","setTimeout","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","currentPage","itemsPerPage","visibleNum","resizeThrottle","disabledClass","activeClass","tpl","skin","components","first","prev","next","last","lists","onInit","onReady","onChange","COMPONENTS","AsPaginator","element","totalItems","options","$element","empty","extend","totalPages","getTotalPages","isOutOfBounds","initialized","addClass","classes","disabled","active","_trigger","init","value","that","visible","getVisible","each","createHtml","bindEvents","goTo","window","on","resize","resizeTime","contents","match","opts","call","replace","append","unbindEvents","width","adjacent","v","current","total","omitLeft","omitRight","left","right","page","Math","max","min","find","removeClass","hasPreviousPage","getPreviousPage","hasNextPage","getNextPage","data","changes","option","hasOwnProperty","ceil","lastPage","eventType","_len2","_key2","concat","trigger","NAMESPACE$1","onFunction","word","substring","toUpperCase","events","split","join","name","method","isPlainObject","registerComponent","defaults","$prev","proxy","off","$next","$first","goFirst","$last","goLast","remainder","k","limit","itemsTpl","$items","e","parent","undefined","render","overflow","array","visibleBefore","replaceWith","remove","$goTo","$input","$button","parseInt","val","omit","calculate","item"],"mappings":"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","file":"jquery-asPaginator.min.js","sourcesContent":["/**\n* jQuery asPaginator v0.3.3\n* https://github.com/amazingSurge/jquery-asPaginator\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'asPaginator',\n\n  currentPage: 1,\n  itemsPerPage: 10,\n  visibleNum: 5,\n  resizeThrottle: 250,\n\n  disabledClass: 'asPaginator_disable',\n  activeClass: 'asPaginator_active',\n\n  tpl() {\n    return '<ul>{{first}}{{prev}}{{lists}}{{next}}{{last}}</ul>';\n  },\n\n  skin: null,\n  components: {\n    first: true,\n    prev: true,\n    next: true,\n    last: true,\n    lists: true\n  },\n\n  // callback function\n  onInit: null,\n  onReady: null,\n  onChange: null // function(page) {}\n};\n\nfunction throttle(func, wait) {\n  const _now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  let timeout;\n  let context;\n  let args;\n  let result;\n  let previous = 0;\n  let later = function() {\n    previous = _now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) {\n      context = args = null;\n    }\n  };\n\n  return (...params) => {\n    /*eslint consistent-this: \"off\"*/\n    let now = _now();\n    let remaining = wait - (now - previous);\n    context = this;\n    args = params;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = func.apply(context, args);\n      if (!timeout) {\n        context = args = null;\n      }\n    } else if (!timeout) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n\nconst NAMESPACE$1 = 'asPaginator';\nconst COMPONENTS = {};\n\n/**\n * Plugin constructor\n **/\nclass AsPaginator {\n  constructor(element, totalItems, options) {\n    this.element = element;\n    this.$element = $(element).empty();\n\n    this.options = $.extend({}, DEFAULTS, options);\n    this.namespace = this.options.namespace;\n\n    this.currentPage = this.options.currentPage || 1;\n    this.itemsPerPage = this.options.itemsPerPage;\n    this.totalItems = totalItems;\n    this.totalPages = this.getTotalPages();\n\n    if (this.isOutOfBounds()) {\n      this.currentPage = this.totalPages;\n    }\n\n    this.initialized = false;\n    this.components = COMPONENTS;\n    this.$element.addClass(this.namespace);\n\n    if (this.options.skin) {\n      this.$element.addClass(this.options.skin);\n    }\n\n    this.classes = {\n      disabled: this.options.disabledClass,\n      active: this.options.activeClass\n    };\n\n    this.disabled = false;\n\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    const that = this;\n\n    that.visible = that.getVisible();\n\n    $.each(this.options.components, (key, value) => {\n      if (value === null || value === false) {\n        return false;\n      }\n\n      that.components[key].init(that);\n    });\n\n    that.createHtml();\n    that.bindEvents();\n\n    that.goTo(that.currentPage);\n\n    that.initialized = true;\n\n    // responsive\n    if (typeof this.options.visibleNum !== 'number') {\n      $(window).on('resize', throttle(() => {\n        that.resize();\n      }, this.options.resizeTime));\n    }\n\n    this._trigger('ready');\n  }\n\n  createHtml() {\n    const that = this;\n    let contents;\n    that.contents = that.options.tpl();\n\n    const length = that.contents.match(/\\{\\{([^\\}]+)\\}\\}/g).length;\n    let components;\n\n    for (let i = 0; i < length; i++) {\n      components = that.contents.match(/\\{\\{([^\\}]+)\\}\\}/);\n\n      if (components[1] === 'namespace') {\n        that.contents = that.contents.replace(components[0], that.namespace);\n        continue;\n      }\n\n      if (this.options.components[components[1]]) {\n        contents = that.components[components[1]].opts.tpl.call(that);\n        that.contents = that.contents.replace(components[0], contents);\n      }\n    }\n\n    that.$element.append($(that.contents));\n  }\n\n  bindEvents() {\n    const that = this;\n\n    $.each(this.options.components, (key, value) => {\n      if (value === null || value === false) {\n        return false;\n      }\n\n      that.components[key].bindEvents(that);\n    });\n  }\n\n  unbindEvents() {\n    const that = this;\n\n    $.each(this.options.components, (key, value) => {\n      if (value === null || value === false) {\n        return false;\n      }\n\n      that.components[key].unbindEvents(that);\n    });\n  }\n\n  resize() {\n    const that = this;\n    that._trigger('resize');\n    that.goTo(that.currentPage);\n    that.visible = that.getVisible();\n\n    $.each(this.options.components, (key, value) => {\n      if (value === null || value === false) {\n        return false;\n      }\n\n      if (typeof that.components[key].resize === 'undefined') {\n        return;\n      }\n\n      that.components[key].resize(that);\n    });\n  }\n\n  getVisible() {\n    const width = $('body, html').width();\n    let adjacent = 0;\n    if (typeof this.options.visibleNum !== 'number') {\n      $.each(this.options.visibleNum, (i, v) => {\n        if (width > i) {\n          adjacent = v;\n        }\n      });\n    } else {\n      adjacent = this.options.visibleNum;\n    }\n\n    return adjacent;\n  }\n\n  calculate(current, total, visible) {\n    let omitLeft = 1;\n    let omitRight = 1;\n\n    if (current <= visible + 2) {\n      omitLeft = 0;\n    }\n\n    if (current + visible + 1 >= total) {\n      omitRight = 0;\n    }\n\n    return {\n      left: omitLeft,\n      right: omitRight\n    };\n  }\n\n  goTo(page) {\n    page = Math.max(1, Math.min(page, this.totalPages));\n\n    // if true , dont relaod again\n    if (page === this.currentPage && this.initialized === true) {\n      return false;\n    }\n\n    this.$element.find(`.${this.classes.disabled}`).removeClass(this.classes.disabled);\n\n    // when add class when go to the first one or the last one\n    if (page === this.totalPages) {\n      this.$element.find(`.${this.namespace}-next`).addClass(this.classes.disabled);\n      this.$element.find(`.${this.namespace}-last`).addClass(this.classes.disabled);\n    }\n\n    if (page === 1) {\n      this.$element.find(`.${this.namespace}-prev`).addClass(this.classes.disabled);\n      this.$element.find(`.${this.namespace}-first`).addClass(this.classes.disabled);\n    }\n\n    // here change current page first, and then trigger 'change' event\n    this.currentPage = page;\n\n    if (this.initialized) {\n      this._trigger('change', page);\n    }\n  }\n\n  prev() {\n    if (this.hasPreviousPage()) {\n      this.goTo(this.getPreviousPage());\n      return true;\n    }\n\n    return false;\n  }\n\n  next() {\n    if (this.hasNextPage()) {\n      this.goTo(this.getNextPage());\n      return true;\n    }\n\n    return false;\n  }\n\n  goFirst() {\n    return this.goTo(1);\n  }\n\n  goLast() {\n    return this.goTo(this.totalPages);\n  }\n\n  // update({totalItems: 10, itemsPerPage: 5, currentPage:3});\n  // update('totalPage', 10);\n  update(data, value) {\n    let changes = {};\n\n    if (typeof data === \"string\") {\n      changes[data] = value;\n    } else {\n      changes = data;\n    }\n\n    for (const option in changes) {\n      if (Object.hasOwnProperty.call(changes, option)) {\n        switch (option) {\n          case 'totalItems':\n            this.totalItems = changes[option];\n            break;\n          case 'itemsPerPage':\n            this.itemsPerPage = changes[option];\n            break;\n          case 'currentPage':\n            this.currentPage = changes[option];\n            break;\n          default:\n            break;\n        }\n      }\n    }\n\n    this.totalPages = this.totalPages();\n    // wait to do\n  }\n\n  isOutOfBounds() {\n    return this.currentPage > this.totalPages;\n  }\n\n  getItemsPerPage() {\n    return this.itemsPerPage;\n  }\n\n  getTotalItems() {\n    return this.totalItems;\n  }\n\n  getTotalPages() {\n    this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage);\n    this.lastPage = this.totalPages;\n    return this.totalPages;\n  }\n\n  getCurrentPage() {\n    return this.currentPage;\n  }\n\n  hasPreviousPage() {\n    return this.currentPage > 1;\n  }\n\n  getPreviousPage() {\n    if (this.hasPreviousPage()) {\n      return this.currentPage - 1;\n    }\n    return false;\n  }\n\n  hasNextPage() {\n    return this.currentPage < this.totalPages;\n  }\n\n  getNextPage() {\n    if (this.hasNextPage()) {\n      return this.currentPage + 1;\n    }\n    return false;\n  }\n\n  enable() {\n    if (this.disabled) {\n      this.disabled = false;\n\n      this.$element.removeClass(this.classes.disabled);\n\n      this.bindEvents();\n    }\n\n    this._trigger('enable');\n  }\n\n  disable() {\n    if (this.disabled !== true) {\n      this.disabled = true;\n\n      this.$element.addClass(this.classes.disabled);\n\n      this.unbindEvents();\n    }\n\n    this._trigger('disable');\n  }\n\n  destroy() {\n    this.$element.removeClass(this.classes.disabled);\n    this.unbindEvents();\n    this.$element.data(NAMESPACE$1, null);\n    this._trigger('destroy');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  eventName(events) {\n    if (typeof events !== 'string' || events === '') {\n      return `.${this.options.namespace}`;\n    }\n    events = events.split(' ');\n\n    let length = events.length;\n    for (let i = 0; i < length; i++) {\n      events[i] = `${events[i]}.${this.options.namespace}`;\n    }\n    return events.join(' ');\n  }\n\n  static registerComponent(name, method) {\n    COMPONENTS[name] = method;\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nAsPaginator.registerComponent('prev', {\n  defaults: {\n    tpl() {\n      return `<li class=\"${this.namespace}-prev\"><a>Prev</a></li>`;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.prev);\n\n    this.opts = opts;\n  },\n\n  bindEvents(instance) {\n    this.$prev = instance.$element.find(`.${instance.namespace}-prev`);\n    this.$prev.on('click.asPaginator', $.proxy(instance.prev, instance));\n  },\n\n  unbindEvents() {\n    this.$prev.off('click.asPaginator');\n  }\n});\n\nAsPaginator.registerComponent('next', {\n  defaults: {\n    tpl() {\n      return `<li class=\"${this.namespace}-next\"><a>Next</a></li>`;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.next);\n\n    this.opts = opts;\n  },\n\n  bindEvents(instance) {\n    this.$next = instance.$element.find(`.${instance.namespace}-next`);\n    this.$next.on('click.asPaginator', $.proxy(instance.next, instance));\n  },\n\n  unbindEvents() {\n    this.$next.off('click.asPaginator');\n  }\n});\n\nAsPaginator.registerComponent('first', {\n  defaults: {\n    tpl() {\n      return `<li class=\"${this.namespace}-first\"><a>First</a></li>`;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.first);\n\n    this.opts = opts;\n  },\n\n  bindEvents(instance) {\n    this.$first = instance.$element.find(`.${instance.namespace}-first`);\n    this.$first.on('click.asPaginator', $.proxy(instance.goFirst, instance));\n  },\n\n  unbindEvents() {\n    this.$first.off('click.asPaginator');\n  }\n});\n\nAsPaginator.registerComponent('last', {\n  defaults: {\n    tpl() {\n      return `<li class=\"${this.namespace}-last\"><a>Last</a></li>`;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.last);\n\n    this.opts = opts;\n  },\n\n  bindEvents(instance) {\n    this.$last = instance.$element.find(`.${instance.namespace}-last`);\n    this.$last.on('click.asPaginator', $.proxy(instance.goLast, instance));\n  },\n\n  unbindEvents() {\n    this.$last.off('click.asPaginator');\n  }\n});\n\nAsPaginator.registerComponent('lists', {\n  defaults: {\n    tpl() {\n      let lists = '';\n      let remainder = this.currentPage >= this.visible ? this.currentPage % this.visible : this.currentPage;\n      remainder = remainder === 0 ? this.visible : remainder;\n      for (let k = 1; k < remainder; k++) {\n        lists += `<li class=\"${this.namespace}-items\" data-value=\"${this.currentPage - remainder + k}\"><a href=\"#\">${this.currentPage - remainder + k}</a></li>`;\n      }\n      lists += `<li class=\"${this.namespace}-items ${this.classes.active}\" data-value=\"${this.currentPage}\"><a href=\"#\">${this.currentPage}</a></li>`;\n      for (let i = this.currentPage + 1, limit = i + this.visible - remainder - 1 > this.totalPages ? this.totalPages : i + this.visible - remainder - 1; i <= limit; i++) {\n        lists += `<li class=\"${this.namespace}-items\" data-value=\"${i}\"><a href=\"#\">${i}</a></li>`;\n      }\n\n      return lists;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.lists);\n\n    this.opts = opts;\n\n    instance.itemsTpl = this.opts.tpl.call(instance);\n  },\n\n  bindEvents(instance) {\n    const that = this;\n    this.$items = instance.$element.find(`.${instance.namespace}-items`);\n    instance.$element.on('click', this.$items, e => {\n      const page = $(e.target).parent().data('value') || $(e.target).data('value');\n\n      if (page === undefined) {\n        //console.log(\"wrong page value or prev&&next\");\n        return false;\n      }\n\n      if (page === '') {\n        return false;\n      }\n\n      instance.goTo(page);\n    });\n\n    that.render(instance);\n    instance.$element.on('asPaginator::change', () => {\n      that.render(instance);\n    });\n  },\n\n  unbindEvents(instance) {\n    instance.$element.off('click', this.$items);\n  },\n\n  resize(instance) {\n    this.render(instance);\n  },\n\n  render(instance) {\n    const current = instance.currentPage;\n    let overflow;\n    const that = this;\n\n    const array = this.$items.removeClass(instance.classes.active);\n    $.each(array, (i, v) => {\n\n      if ($(v).data('value') === current) {\n        $(v).addClass(instance.classes.active);\n        overflow = false;\n        return false;\n      }\n    });\n\n    if (overflow === false && this.visibleBefore === instance.visible) {\n      return;\n    }\n\n    this.visibleBefore = instance.visible;\n\n    $.each(array, (i, v) => {\n      if (i === 0) {\n        $(v).replaceWith(that.opts.tpl.call(instance));\n      } else {\n        $(v).remove();\n      }\n    });\n    this.$items = instance.$element.find(`.${instance.namespace}-items`);\n  }\n});\n\nAsPaginator.registerComponent('goTo', {\n  defaults: {\n    tpl() {\n      return `<div class=\"${this.namespace}-goTo\"><input type=\"text\" class=\"${this.namespace}-input\" /><button type=\"submit\" class=\"${this.namespace}-submit\">Go</button></div>`;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.goTo);\n\n    this.opts = opts;\n  },\n\n  bindEvents(instance) {\n    const that = this;\n    that.$goTo = instance.$element.find(`.${instance.namespace}-goTo`);\n    that.$input = that.$goTo.find(`.${instance.namespace}-input`);\n    that.$button = that.$goTo.find(`.${instance.namespace}-submit`);\n\n    that.$button.on('click', () => {\n      let page = parseInt(that.$input.val(), 10);\n      page = page > 0 ? page : instance.currentPage;\n      instance.goTo(page);\n    });\n  },\n\n  unbindEvents() {\n    this.$button.off('click');\n  }\n});\n\nAsPaginator.registerComponent('altLists', {\n  defaults: {\n    tpl() {\n      let lists = '';\n      const max = this.totalPages;\n      const current = this.currentPage;\n      const omit = this.calculate(current, max, this.visible);\n      const that = this;\n      let i;\n      const item = (i, classes) => {\n        if (classes === 'active') {\n          return `<li class=\"${that.namespace}-items ${that.classes.active}\" data-value=\"${i}\"><a href=\"#\">${i}</a></li>`;\n        } else if (classes === 'omit') {\n          return `<li class=\"${that.namespace}-items ${that.namespace}_ellipsis\" data-value=\"ellipsis\"><a href=\"#\">...</a></li>`;\n        } else {\n          return `<li class=\"${that.namespace}-items\" data-value=\"${i}\"><a href=\"#\">${i}</a></li>`;\n        }\n      };\n\n      if (omit.left === 0) {\n        for (i = 1; i <= current - 1; i++) {\n          lists += item(i);\n        }\n        lists += item(current, 'active');\n      } else {\n        for (i = 1; i <= 2; i++) {\n          lists += item(i);\n        }\n\n        lists += item(current, 'omit');\n\n        for (i = current - this.visible + 1; i <= current - 1; i++) {\n          lists += item(i);\n        }\n\n        lists += item(current, 'active');\n      }\n\n      if (omit.right === 0) {\n        for (i = current + 1; i <= max; i++) {\n          lists += item(i);\n        }\n      } else {\n        for (i = current + 1; i <= current + this.visible - 1; i++) {\n          lists += item(i);\n        }\n\n        lists += item(current, 'omit');\n\n        for (i = max - 1; i <= max; i++) {\n          lists += item(i);\n        }\n      }\n\n      return lists;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.altLists);\n\n    this.opts = opts;\n  },\n\n  bindEvents(instance) {\n    const that = this;\n    this.$items = instance.$element.find(`.${instance.namespace}-items`);\n    instance.$element.on('click', this.$items, e => {\n      const page = $(e.target).parent().data('value') || $(e.target).data('value');\n\n      if (page === undefined) {\n        //console.log(\"wrong page value or prev&&next\");\n        return false;\n      }\n\n      if (page === 'ellipsis') {\n        return false;\n      }\n\n      if (page === '') {\n        return false;\n      }\n\n      instance.goTo(page);\n    });\n\n    that.render(instance);\n    instance.$element.on('asPaginator::change', () => {\n      that.render(instance);\n    });\n  },\n\n  unbindEvents(instance) {\n    instance.$wrap.off('click', this.$items);\n  },\n\n  resize(instance) {\n    this.render(instance);\n  },\n\n  render(instance) {\n    const that = this;\n    const array = this.$items.removeClass(instance.classes.active);\n    $.each(array, (i, v) => {\n      if (i === 0) {\n        $(v).replaceWith(that.opts.tpl.call(instance));\n      } else {\n        $(v).remove();\n      }\n    });\n    this.$items = instance.$element.find(`.${instance.namespace}-items`);\n  }\n});\n\nAsPaginator.registerComponent('info', {\n  defaults: {\n    tpl() {\n      return `<li class=\"${this.namespace}-info\"><a href=\"javascript:void(0);\"><span class=\"${this.namespace}-current\"></span> / <span class=\"${this.namespace}-total\"></span></a></li>`;\n    }\n  },\n\n  init(instance) {\n    const opts = $.extend({}, this.defaults, instance.options.components.info);\n\n    this.opts = opts;\n  },\n\n  bindEvents(instance) {\n    const $info = instance.$element.find(`.${instance.namespace}-info`);\n    const $current = $info.find(`.${instance.namespace}-current`);\n    $info.find(`.${instance.namespace}-total`).text(instance.totalPages);\n\n    $current.text(instance.currentPage);\n    instance.$element.on('asPaginator::change', () => {\n      $current.text(instance.currentPage);\n    });\n  }\n});\n\nvar info = {\n  version:'0.3.3'\n};\n\nconst NAMESPACE = 'asPaginator';\nconst OtherAsPaginator = $.fn.asPaginator;\n\nconst jQueryAsPaginator = function(totalItems, ...args) {\n  if (!$.isNumeric(totalItems) && typeof totalItems === 'string') {\n    const method = totalItems;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new AsPaginator(this, totalItems, ...args));\n    }\n  });\n};\n\n$.fn.asPaginator = jQueryAsPaginator;\n\n$.asPaginator = $.extend({\n  registerComponent: AsPaginator.registerComponent,\n  setDefaults: AsPaginator.setDefaults,\n  noConflict: function() {\n    $.fn.asPaginator = OtherAsPaginator;\n    return jQueryAsPaginator;\n  }\n}, info);\n"]}